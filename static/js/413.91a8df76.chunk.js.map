{"version":3,"file":"static/js/413.91a8df76.chunk.js","mappings":"4VAsBA,SAASA,EAAUC,GACjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,YAAaL,EAAKM,SAAA,CACxE,mBACDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACJ,MAAM,UAAUK,KAAK,mBAAkBH,SAAC,iBAEtC,KACP,IAAII,MAAOC,cACX,MAGP,CAIA,MAAMC,GAAeC,EAAAA,EAAAA,KAEN,SAASC,IACpB,MAAK,SAACC,EAAQ,aAACC,EAAaC,WAAW,OAACC,KAASC,EAAAA,EAAAA,OAC3CC,EAAUC,IAAYC,EAAAA,EAAAA,WAAS,GAC/BC,GAASC,EAAAA,EAAAA,MAkBjB,OACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAa,CAACC,MAAOd,EAAaN,UACjCL,EAAAA,EAAAA,MAAC0B,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIvB,SAAA,EACvCC,EAAAA,EAAAA,KAACuB,EAAAA,GAAW,KACZ7B,EAAAA,EAAAA,MAAC8B,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZ9B,SAAA,EAEFC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmBjC,UAC9CC,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,OAEnBjC,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAAC0B,UAAU,KAAKzB,QAAQ,KAAIG,SAAC,qBAGxCL,EAAAA,EAAAA,MAAC8B,EAAAA,EAAG,CAACH,UAAU,OAAQa,YAAU,EAACT,GAAI,CAAEU,GAAI,GAAIpC,SAAA,EAY9CC,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,IACN5B,EAAS,WAAW,CAAC6B,UAAS,IAChCC,OAAO,SACPD,UAAQ,EACRE,WAAS,EACTC,MAAM,WACNC,KAAO5B,EAAyB,OAAb,WACnB6B,GAAG,WACHC,MAAOhC,EAAOiC,SACdC,WAAYlC,EAAOiC,UAAY,uBAC/BE,aAAa,mBACbC,WAAY,CACVC,cACEhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAc,CAACC,SAAS,MAAKnD,UAC5BC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACC,QA5DbC,KACbvC,GAAYD,EAAU,EA2DqByC,UAAU,OAAMvD,SAC1Cc,GAAYb,EAAAA,EAAAA,KAACuD,EAAAA,EAAc,KAAMvD,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,YAQ9DxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CACfC,SAAS1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACC,MAAM,WAAW/D,MAAM,YAC1C2C,MAAM,iBAERxC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CACLpB,KAAK,SACLF,WAAS,EACT3C,QAAQ,YACR6B,GAAI,CAAEU,GAAI,EAAG2B,GAAI,GACjBV,QAAS3C,GAzEHsD,IACZ,MAAMC,EAAM,CACRpB,SAASmB,EAAKnB,SACdqB,QAAQC,aAAaC,QAAQ,WAGjCnD,GAASoD,EAAAA,EAAAA,IAAOJ,GAAO,IAmEejE,SACjC,kBAMLC,EAAAA,EAAAA,KAACR,EAAS,CAACiC,GAAI,CAAEU,GAAI,EAAG2B,GAAI,SAIpC,C","sources":["Component/AUTH/Updatepassword.jsx"],"sourcesContent":["import  React, { useState } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\n// import Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { update } from '../../ReduxToolkit/AuthSlice';\r\nimport { IconButton,InputAdornment } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Updatepassword() {\r\n    const{register,handleSubmit,formState: {errors}}=useForm()\r\n    const[isvisible,setVisible]=useState(false)\r\n    const dispatch=useDispatch()\r\n\r\n    const toggle = () => {\r\n      setVisible(!isvisible);\r\n    };\r\n  \r\n\r\n    const onSubmit=(data)=>{\r\n        const data1={\r\n            password:data.password,\r\n            user_id:localStorage.getItem(\"userid\")\r\n        }\r\n\r\n        dispatch(update(data1))\r\n\r\n\r\n    }\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Password\r\n          </Typography>\r\n          <Box component=\"form\"  noValidate sx={{ mt: 1 }}>\r\n\r\n          {/* <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"user_id\"\r\n                  label=\"User_Id\"\r\n                  type=\"user_id\"\r\n                  id=\"user_id\"\r\n                  value={localStorage.getItem(\"userid\")}\r\n                /> */}\r\n\r\n            <TextField\r\n            {...register(\"password\",{required:true})}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type={!isvisible ? \"password\" : \"text\"}\r\n              id=\"password\"\r\n              error={errors.password}\r\n              helperText={errors.password && \"Password is required\"}\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={toggle} className=\"icon\"> \r\n                      {isvisible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n\r\n\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n                Submit\r\n            </Button>\r\n\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}"],"names":["Copyright","props","_jsxs","Typography","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","Updatepassword","register","handleSubmit","formState","errors","useForm","isvisible","setVisible","useState","dispatch","useDispatch","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","noValidate","mt","TextField","required","margin","fullWidth","label","type","id","error","password","helperText","autoComplete","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","toggle","className","VisibilityIcon","VisibilityOffIcon","FormControlLabel","control","Checkbox","value","Button","mb","data","data1","user_id","localStorage","getItem","update"],"sourceRoot":""}