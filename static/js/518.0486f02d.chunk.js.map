{"version":3,"file":"static/js/518.0486f02d.chunk.js","mappings":"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","sources":["Component/AUTH/Login.jsx"],"sourcesContent":["  \r\nimport  React, { useEffect } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../ReduxToolkit/AuthSlice';\r\nimport { IconButton,InputAdornment } from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Login() {\r\n  const navigate=useNavigate()\r\n  const{status,redirectTo}=useSelector(state=>state.Auth)\r\n  console.log(status)\r\n  const dispatch=useDispatch()\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const[isvisible,setVisible]=useState(false)\r\n\r\n  const toggle=()=>{\r\n    setVisible(!isvisible)\r\n  }\r\n\r\n  const validation = () => {\r\n    let error = {};\r\n    if (!user.email) {\r\n      error.email = \"Email is Required\";\r\n    }\r\n    if (!user.password) {\r\n      error.password = \"Password is Required\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  console.log(error);\r\n  const SubmitInfo = async(e) => {\r\n    e.preventDefault();\r\n    setError(validation());\r\n\r\n    const data={\r\n       email:user.email,\r\n       password:user.password \r\n    };\r\n     \r\n    dispatch(login(data))\r\n    setUser({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n    \r\n    \r\n\r\n\r\n  };\r\n\r\n  \r\n\r\n\r\n\r\n  let name, value;\r\n  const postUserData = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (name === \"email\") {\r\n      if (value.length === 0) {\r\n        setError({ ...error, email: \"Email is Required\" });\r\n        setUser({ ...user, email: \"\" });\r\n      } else {\r\n        setError({ ...error, email: \"\" });\r\n        setUser({ ...user, email: value });\r\n      }\r\n    }\r\n    if (name === \"password\") {\r\n      if (value.length === 0) {\r\n        setError({ ...error, password: \"Password name is Required\" });\r\n        setUser({ ...user, password: \"\" });\r\n      } else {\r\n        setError({ ...error, password: \"\" });\r\n        setUser({ ...user, password: value });\r\n      }\r\n    }\r\n  \r\n  };\r\n\r\nuseEffect(()=>{\r\n  const RedirectUser=()=>{\r\n    let token=localStorage.getItem(\"token\");\r\n    let isInLoginPage=window.location.pathname.toLowerCase()===\"/login\";\r\n    if(token!==null && token!==undefined && token!==\"\"){\r\n         isInLoginPage && navigate(\"/\") \r\n    }\r\n\r\n\r\n\r\n  };\r\n  RedirectUser()\r\n},[navigate,redirectTo])\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={SubmitInfo} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              onChange={postUserData}\r\n              value={user.email}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n             <span style={{color:\"red\"}}>\r\n    {\" \"}\r\n        {error.email}{\" \"}\r\n    </span>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              onChange={postUserData}\r\n              value={user.password}\r\n              label=\"Password\"\r\n              type={!isvisible ? \"password\" : \"text\"}\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={toggle} className=\"icon\"> \r\n                      {isvisible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n\r\n\r\n            />\r\n              <span style={{color:\"red\"}}>\r\n    {\" \"}\r\n        {error.password}{\" \"}\r\n    </span>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            {/* <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n\r\n            </Button> */}\r\n\r\n{status===\"idle\" ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n              >\r\n                SIGN IN\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              \r\n            >\r\n             Loading.....\r\n            </Button>\r\n                        )}\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/update\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/registration\" variant=\"body2\" style={{cursor:\"pointer\"}}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\nÂ Â );\r\n}"],"names":["Copyright","props","_jsxs","Typography","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","Login","navigate","useNavigate","status","redirectTo","useSelector","state","Auth","console","log","dispatch","useDispatch","user","setUser","useState","email","password","error","setError","isvisible","setVisible","name","value","postUserData","e","target","length","useEffect","RedirectUser","token","localStorage","getItem","isInLoginPage","window","location","pathname","toLowerCase","undefined","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","async","preventDefault","validation","data","login","noValidate","mt","TextField","margin","required","fullWidth","id","label","onChange","autoComplete","autoFocus","style","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","toggle","className","VisibilityIcon","VisibilityOffIcon","FormControlLabel","control","Checkbox","Button","size","Grid","container","item","xs","to","cursor","mb"],"sourceRoot":""}